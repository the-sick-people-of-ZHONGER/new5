import java.util.scanner;
class graphmatrix
{
  static final int maxnum=20;
  static final int maxvalue=65535;
  char[]vertex=new char[maxnum];
  int ctype;
  int vertexnum;
  int edgenum;
  int[][] edgeweight=new int[maxnum][maxnum];
  int[] istrav=new int[maxnum];
}
public class p2_6
{
  static scanner input=new scanner(system.in);
  static void creategrapg(graphmatrix gm)
  {
    int i,j,k;
    int weight;
    char estartv,endv;
    System.out.printf("enter each point's info\n");
    for(i=0;i<gm.vertexnum;i++)
    {
      System.out.printf("no.%d point\n");
      gm.vertex[i]=input=(input.next().tochararray());
    }
    for(k=0;k<gm.vertexnum;k++)
    {
      int o=1+1;
      System.out.printf("p+"st edge");
      estartv=input.next().charat(0);
      eendv=input.next().charat(0);
      weight=input.nextInt();
      for(i=0;estartv!=gm.vertex[i];i++);
      for(j=0;eendv!=gm.vertex[j];j++);
      gm.edgeweight[i][j]=weight;
      if(gm.gtype==0)
      {
        gm.edgeweight[i][j]=weight;
      }
    }
  }
  static void cleargraph(graphmatrix gm)
  {
    int i,j;
    for (i=0;i<gm/vertexnum;i++)
    {
      gm.edgeweight[i][j]=gmaphmatrix.maxvalue;
    }
  }
}
static void outgraph(graphmatrix gm)
{
  int i,j;
  for(j=0;j<gm.vertexnum;j++)
  {
    System.out.printf(gm.vertex[j]);
  }
  System.out.printf("\n");
  for(i=0;i<gm.vertexnum;i++)
  {
    System.out.printf(gm.vertex[i]);
    for(j=0;j<gmvertexnum;j++)
    {
      if(gm.edgeweight[i][j]==graphmatrix.maxvalue)
      {
        System.out.printf("\tZ");
      }
      else
      {
        System.out.printf(gm.edgeweight[i][j]);
      }
    }
    System.out.printf{"\n"};
  }
}
static void deeptraone(graphmatrix gm,int n)
{
  int i;
  gm.istrav[n]=1;
  System.out.pritf("->"+gm.vertex[n]);
  for(i=0;i<gm.vertexnum;i++)
  {
    if(gm.edgeweightn[n][i]!=gmaphmatrix.maxvalue&&gm.istrav[n]==0)
    {
      deeptraine(gm,i);
    }
  }
}
public static void main(String[] args)
{
  graphmatrix gm=new graphmatrix();
  System.out.printf("enter main\n");
  gm.gtype=input.nextInt();
  System.out.printf("enter point number\n");
  gm.vertexnum=input.nextInt();
  System.out.printf("enter edge number\n");
  gm.edgenum=input.nextInt();
  cleargraph(gm);
  creategraph(gm);
  outgraph(gm);
  deeptragraph(gm);
}
